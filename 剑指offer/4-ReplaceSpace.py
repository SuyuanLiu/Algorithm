'''
解题思路：
python字符串是不可修改的🙅，所以必须额外利用内存空间。这边一个是直接遍历字符串s，遇到空格直接替换为%20；另一种方法使用split。

时空复杂度：
- 时间复杂度 O(n)
- 空间复杂度 O(n)

Test Cases：
- 空字符
- 只有一个空格
- 字符串中有多个空格连续存在
- 字符串中没有空格
- 空格位于字符串最开始，最后面，中间正常位置

询问面试官👨‍🏫
- 如果有多个空格连续出现直接替换吗

⚠️
如果是其他的语言，要主动询问面试官是否可以利用额外空间。
如果要求在原字符串上进行改动，不允许额外的内存空间❎，应使用以下方法：
遍历一遍数组，统计空格的个数，计算添加空格后的字符串的长度。使用两个指针i，j，分别指向字符串的尾部和扩充后的字符串尾部。从字符串的末尾开始遍历，把字符一个一个移到最后面，遇到空格加入20%即可。这样的时间复杂度是 O(n)，空间复杂度 O(1).
'''
# 
def ReplaceSpace(s):
    if not s:
        return s

    res = ''
    for c in s:
        if c == ' ':
            res += '%20'
        else:
            res += c 
    return res

# Use split
def ReplaceSpace(s):
    if not s:
        return s
    
    tmp = s.split(' ')
    res = '%20'.join(ss for ss in s)
    return res
