def treeNum(n):
  if n < 3:
    return n if n != 0 else 1
  
  res = 0
  for i in range(n):
    left = treeNum(i)
    right = treeNum(n-i-1)
    res += left * right
  
  return res
------------------------------------------

def treeNum(n):
  if n < 3:
    return n if n != 0 else 1

  dp = [1 for i in range(n+1)]
  dp[2] = 2

  for i in range(3, n+1):
    for k in range(i):
      dp[i] += dp[k] * dp[n-k-1]

  return dp[-1]  
------------------------------------------

def treeNum(n):
  if n < 3:
    return n if n != 0 else 1

  dp = [1 for i in range(n+1)]
  dp[2] = 2

  for i in range(3, n+1):
    for k in range(i//2):
      dp[i] += 2 * dp[k] * dp[n-k-1]
    if i % 2 == 1:
      dp[i] += dp[(i-1)//2] * dp[n-1-(i-1)//2]

  return dp[-1]  
